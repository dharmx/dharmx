#
# wm independent hotkeys
#

# terminal emulators
# minimal zsh for st,fish urxvt,alacritty with bash
super + {_,ctrl,shift} + Return
				{st,tym,kitty}

# start a new tmux session with st,open a shared kitty instance,attach to the latest tmux session with st
super + alt + {_,ctrl} + Return
				{st -e tmux,st -e tmux attach-session}

# make sxhkd reload its configuration files
super + {_,shift} + Escape
				{pkill -USR1 -x sxhkd;\
					dunstify -a "sxhkd" -i "export" "SXHKD" "Reloaded all configurations.",\
					$XDG_CONFIG_HOME/bspwm/defaults;\
					dunstify -a "sxhkd" -i "configuration" \
					"BSPWM" "Configurations and rules have been set to default."}

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
				bspc {quit,wm -r}

# close and kill
super + {_,shift + }q
				bspc node -{c,k}

# just close
ctrl + q
				bspc node --close

# m - alternate between the tiled and monocle layout
# y - send the newest marked node to the newest preselected node
# g - swap the current node and the biggest window
super + {m,y,g}
				bspc {desktop -l next,\
					node newest.marked.local -n newest.!automatic.local,\
					node -s biggest.window}

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
				bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
				bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
				bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
				bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
				bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
				bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
				bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
				bspc wm -h off; \
				bspc node {older,newer} -f; \
				bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
				bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
				bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
				bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
				bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
				bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
				bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
				bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
				bspc node -v {-20 0,0 20,0 -20,20 0}

#XF86WebCam
# pactl audio configurations
## increase volume
XF86Audio{Raise,Lower}Volume
        $XDG_CONFIG_HOME/sxhkd/scripts/volume.bash --{increase,decrease}

## mute voloume/mic
XF86Audio{_,Mic}Mute
        $XDG_CONFIG_HOME/sxhkd/scripts/{volume.bash --toggle,microphone.bash}

# backlight configurations
## inc/dec brightness
XF86MonBrightness{Up,Down}
        $XDG_CONFIG_HOME/sxhkd/scripts/brightness.bash -{I,D}

# playerctl audio configurations
## play,pause,next,prev
XF86Audio{Play,Stop,Next,Prev}
        playerctl {play-pause,pause,next,previous}

## airplane mode
XF86RFKill
        $XDG_CONFIG_HOME/sxhkd/scripts/airplane.bash

XF86Search
				rofi -show run

super + Menu
				jgmenu_run &

# mpd audio configurations
## inc/dec volume
shift + XF86Audio{Raise,Lower}Volume
        mpc volume {+,-}5

## mute vloume
shift + XF86AudioMute
        mpc volume 0

## play
shift + XF86AudioPlay
        mpc toggle

## stop
shift + XF86AudioStop
        mpc stop

# next audio
shift + XF86AudioNext
        mpc next

# previous audio
shift + XF86AudioPrev
        mpc prev

# rofi app menu + run prompt
super + {d,a}
        rofi -show {_,run}

# rofi alt Tab
alt + Tab
        rofi -show window

# bind some nice apps
## launch web browser
super + {shift + f,e}
        {qutebrowser,st -e ranger}

## launch system monitor btop
ctrl + shift + Escape
        st -e btop

## night mode
super + n
        $XDG_CONFIG_HOME/sxhkd/scripts/redshift-toggle.bash

## jgmenu
super + button3
        jgmenu_run &
#
# Screenshot
#

# fullscreen save
{ctrl,_,super} + Print
        {flameshot gui,\
					$XDG_CONFIG_HOME/sxhkd/scripts/screenshot.bash --xclip-fullscreen,\
					$XDG_CONFIG_HOME/sxhkd/scripts/screenshot.bash --fullscreen}

# cropped save
super + shift + {x,s}
        $XDG_CONFIG_HOME/sxhkd/scripts/screenshot.bash --{selected,xclip-cropped}

# toggle picom, screenlock and lockscreen no screen off
super + {alt + ,_,back}slash
        {locklauncher --no-screen-off &,locklauncher &,$XDG_CONFIG_HOME/picom/launch.bash --toggle}

# show widgets
super + {w,r,x}
        exec $XDG_CONFIG_HOME/eww/structs/{main-utils/main,wallpaper/wal,side-utils/side}launcher

# polybar/tint2 hide/show
super + shift + {_,back}slash
				exec $XDG_CONFIG_HOME/{polybar/configs/evilnord/panel-polybar.bash,tint2/launch.bash --toggle-panel}

#
# dynamic gaps
#

# inc/dec gaps
alt + shift + brace{left,right}
        bspc config window_gap $(( $(bspc config -d any window_gap) {-,+} 5 ))

# inc/dec gaps for focused desktop
alt + super + shift + brace{left,right}
      	bspc config -n focused window_gap $(( $(bspc config -n focused window_gap) {-,+} 5 ))

#
# dynamic borders
#

# inc/dec borders
alt + shift + paren{left,right}
        {bspc config border_width $(( $(bspc config -d any border_width) {-,+} 1 ))}

# increase borders for focused node/window
alt + super + shift + paren{left,right}
        {bspc config -n focused border_width $(( $(bspc config -n focused border_width) {-,+} 1 ))}

# borderless monocle
super + shift + m
				bspc config borderless_monocle {true,false}

# toggle see through (quickhide) -- nsfw hide tihi
super + shift + o
				picom-trans -c {0,100}

# cycle through transparency levels
super + shift + p
				picom-trans -c {0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,96,97,98,99,100}

# vim:nowrap:ft=sxhkdrc:number
