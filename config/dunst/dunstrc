[global]
    background = "#2e3440"
    foreground = "#e5e9f0"
    monitor = 0
    follow = mouse
    
    width = 420
    height = 300

    progress_bar = true
    progress_bar_height = 10
    progress_bar_frame_width = 5
    progress_bar_min_width = 150
    progress_bar_max_width = 300

    dmenu = /usr/bin/dmenu -p dunst:
    browser = /usr/bin/firefox -new-tab

    indicate_hidden = yes
    shrink = no
    transparency = 5
    separator_height = 5
    padding = 15
    horizontal_padding = 15
    frame_width = 0
    frame_color = "#2e3440"
    separator_color = "#00000000"
    sort = no
    idle_threshold = 30
    font = Iosevka Nerd Font 12
    line_height = 6
    # notification_height = 30
    markup = full

    format = "<b>%s</b>\n%b"
    alignment = left
    show_age_threshold = 10
    word_wrap = yes
    ignore_newline = no
    stack_duplicates = false
    hide_duplicate_count = yes
    show_indicators = yes
    icon_position = left
    max_icon_size= 100
    sticky_history = no
    history_length = 3
    browser = qutebrowser
    always_run_script = true
    title = Dunst
    class = Dunst
    corner_radius = 10

    mouse_left = do_action
    mouse_middle = close_current
    mouse_right = context_all

[urgency_low]
    timeout = 4
    background = "#3b4252"
    foreground = "#e5e9f0"
    # new_icon = /home/maker/.config/dunst/notification/twotone_notifications_white_48dp.png
    
[urgency_normal]
    timeout = 8
    background = "#4c566a"
    foreground = "#e5e9f0"
    # new_icon = /home/maker/.config/dunst/notification/twotone_notifications_white_48dp.png

[urgency_critical]
    timeout = 8
    background = "#bf616a"
    foreground = "#e5e9f0"
    # new_icon = /home/dunst/notification/twotone_notifications_white_48dp.png

# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format
# to "".
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# Disable the transient hint so that idle_threshold cannot be bypassed from the
# client
#[transient_disable]
#    match_transient = yes
#    set_transient = no
#
# Make the handling of transient notifications more strict by making them not
# be placed in history.
#[transient_history_ignore]
#    match_transient = yes
#    history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    format = ""

#[history-ignore]
#    # This notification will not be saved in history
#    summary = "foobar"
#    history_ignore = yes

#[skip-display]
#    # This notification will not be displayed, but will be included in the history
#    summary = "foobar"
#    skip_display = yes

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#
#[stack-volumes]
#    appname = "some_volume_notifiers"
#    set_stack_tag = "volume"
#
## vim: ft=cfg:nowrap
