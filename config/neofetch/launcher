#!/usr/bin/env bash

CONFIGS="$XDG_CONFIG_HOME/neofetch/configs"
IMAGES="$XDG_CONFIG_HOME/neofetch/images"
SCRIPTS="$XDG_CONFIG_HOME/neofetch/scripts"
ASCIIS="$XDG_CONFIG_HOME/neofetch/asciis"

NEOFETCH="neofetch --config"

help() {
cat << EOF
DESCRIPTION: Launcher script for my neofetch configurations.

USAGE: ./launcher [CONFIG] [OPTION]
  --help                        Print this message.
  --list                        List all configurations.
  --[neofetch-config]           Print a neofetch configuration.

CONFIG: --verycoldarch 
              justarch
              polararch
              polararchdimmed

CONFIG: --coldarch
              justarch
              polararch
              polararchdimmed

CONFIG: --foodfetch
              onigiri
              chagama
              sushi

CONFIG: --flowerskull
              aurorae
              nordic
              warm
              original
              pinkpolar
              semipolar
              polar
              default

CONFIG: --waifu 
              1-30

ASCII PRESETS: --preset
  bonsai
  bruh
  chika
  yamete
  lmao
  surprisepika
  uwu
  uwuhd
  yamete
  ahegao
  wut
  saitama

  datealive
  bunny
  nezuko
  weird
  hostname [NOT IMPLEMENTED]

EXAMPLES: 
  1. ./launcher --verycoldarch
     This will print the verycoldarch neofetch configuration. Note that, this
     particular configuration will look better if the terminal is in fullscreen
     mode.

  2. ./launcher --flowerskull semipolar
     This will print the flowerskull neofetch configuration with the semipolar
     skull image.
  
  3. ./launcher --preset lmao
     This will print the lmao ascii text art i.e. located in the asciis directory.

  4. ./launcher --preset list 
     This will list all of the presets that are currently available.

  5. ./launcher --waifu 1
     This will print the waifu neofetch configuration with the 1 flavor.
EOF
}

eval_flavor_verycoldarch() {
  VERYCOLDARCH_CONFIG="$CONFIGS/verycoldarch.conf"
  FLAVORS=(justarch polararchdimmed polararch)

  if echo ${FLAVORS[@]} | grep -qw "$1"; then
    echo "$NEOFETCH $VERYCOLDARCH_CONFIG --source $IMAGES/$1.png"
    eval "$NEOFETCH $VERYCOLDARCH_CONFIG --source $IMAGES/$1.png"
  else 
    echo "No such flavor exists!"; echo
    help | head -n11 | tail -n4
  fi
}

eval_flavor_coldarch() {
  COLDARCH_CONFIG="$CONFIGS/coldarch.conf"
  FLAVORS=(justarch polararchdimmed polararch)

  if echo ${FLAVORS[@]} | grep -qw "$1"; then
    eval "$NEOFETCH $COLDARCH_CONFIG --source $IMAGES/$1.png"
  else 
    echo "No such flavor exists!"; echo
    help | head -n16 | tail -n4
  fi
}

eval_flavor_flowerskull() {
  FLOWERSKULL_CONFIG="$CONFIGS/flowerskull.conf"
  FLAVORS=(aurorae nordic warm original pinkpolar semipolar polar default)

  if echo ${FLAVORS[@]} | grep -qw "$1"; then
    eval "$NEOFETCH $FLOWERSKULL_CONFIG --source $IMAGES/$1-skull.png"
  else 
    echo "No such flavor exists!"; echo
    help | tail -n27 | head -n8
  fi
}

eval_flavor_food() {
  FOOD_CONFIG="$CONFIGS/food.conf"
  FLAVORS=(onigiri chagama sushi)

  if echo ${FLAVORS[@]} | grep -qw "$1"; then
    eval "$NEOFETCH $FOOD_CONFIG --source $IMAGES/$1.png"
  else 
    echo "No such flavor exists!"; echo
    help | tail -n56 | head -n4
  fi
}

eval_flavor_waifu() {
  WAIFU_CONFIG="$CONFIGS/waifu.conf"
  FLAVORS=(
    1 2 3 4 5 6 7 8 9 10 
    11 12 13 14 15 16 17 18 19 20
    21 22 23 24 25 26 27 28 29 30
  )

  if echo ${FLAVORS[@]} | grep -qw "$1"; then
    eval "$NEOFETCH $WAIFU_CONFIG --source $IMAGES/waifus/$1.png"
  else
    echo "No such flavor exists!"; echo
    help | tail -n41 | head -n2
  fi
}

eval_asciis() {
  case "$1" in
    bonsai)
      eval "$NEOFETCH $CONFIGS/bonsai.conf"
      ;;
    bruh)
      eval "$NEOFETCH $CONFIGS/asciisq.conf"
      ;;
    ahegao)
      eval "$NEOFETCH $CONFIGS/asciisq.conf --source $ASCIIS/ahegao"
      ;;
    archhd)
      eval "$NEOFETCH $CONFIGS/asciisq.conf --source $ASCIIS/arch-hi-res"
      ;;
    chika)
      eval "$NEOFETCH $CONFIGS/asciisq.conf --source $ASCIIS/chika"
      ;;
    yamete)
      eval "$NEOFETCH $CONFIGS/asciisq-v2.conf"
      ;;
    lmao)
      eval "$NEOFETCH $CONFIGS/asciisq-v2.conf --source $ASCIIS/lmao"
      ;;
    surprisepika)
      eval "$NEOFETCH $CONFIGS/asciisq-v2.conf --source $ASCIIS/surprise-pikachu"
      ;;
    uwu)
      eval "$NEOFETCH $CONFIGS/asciisq-very-minimal.conf --source $ASCIIS/uwu"
      ;;
    uwuhd)
      eval "$NEOFETCH $CONFIGS/asciisq-v2.conf --source $ASCIIS/uwu-hd"
      ;;
    wut)
      eval "$NEOFETCH $CONFIGS/asciisq-v2.conf --source $ASCIIS/wut"
      ;;
    saitama)
      eval "$NEOFETCH $CONFIGS/asciisq-v2.conf --source $ASCIIS/saitama-arch --separator ' '"
      ;;
    datealive)
      eval "$NEOFETCH $CONFIGS/fullscreen.conf --source $ASCIIS/date-a-live"
      ;;
    bunny)
      eval "$NEOFETCH $CONFIGS/fullscreen-abnormal.conf --source $ASCIIS/bunny-girl"
      ;;
    nezuko)
      eval "$NEOFETCH $CONFIGS/fullscreen.conf --source $ASCIIS/nezuko"
      ;;
    list)
      help | tail -n38 | head -n19
      ;;
    *)
      echo "Invalid preset!"; echo
      help | tail -n38 | head -n19
      ;;
  esac
}

case "$1" in
  --verycoldarch)
    if [[ "$2" == "" ]]; then
      eval "$NEOFETCH $CONFIGS/verycoldarch.conf"
    else
      eval_flavor_verycoldarch "$2"
    fi
    ;;
  --coldarch)
    if [[ "$2" == "" ]]; then
      eval "$NEOFETCH $CONFIGS/coldarch.conf"
    else
      eval_flavor_coldarch "$2"
    fi
    ;; 
  --flowerskull)
    if [[ "$2" == "" ]]; then 
      eval "$NEOFETCH $CONFIGS/flowerskull.conf"
    else
      eval_flavor_flowerskull "$2"
    fi
    ;;
  --waifu)
    if [[ "$2" == "" ]]; then
      eval "$NEOFETCH $CONFIGS/waifu.conf"
    else
      eval_flavor_waifu "$2"
    fi
    ;;
  --food)
    if [[ "$2" == "" ]]; then 
      eval "$NEOFETCH $CONFIGS/food.conf"
    else
      eval_flavor_food "$2"
    fi
    ;;
  --hentai | --degeneracy)
    eval "$NEOFETCH $SCRIPTS/hentai.bash"
    ;;
  --preset)
    eval_asciis "$2"    
    ;;
  --help | -h)
    help
    ;;
  --list)
    echo "CONFIGS:"
    for file in $(ls $CONFIGS)
    do
      echo "    $file"
    done
    ;;
  *)
    echo "No such option!"; echo
    help | head -n6 | tail -n4
    ;;
esac

