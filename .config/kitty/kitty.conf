vim:fileencoding=utf-8:ft=conf

# Fully featured
font_family      JetBrainsMono Nerd Font
italic_font      auto
bold_font        auto
bold_italic_font auto

# Font size (in pts)
font_size        14

# The amount the font size is changed by (in pts) when increasing/decreasing
# the font size in a running terminal.
font_size_delta 2

# Nord theme - ported from https://github.com/arcticicestudio/nord-hyper
foreground            #d8dee9
background            #2e3440
# background            #15181e
selection_foreground  #000000
selection_background  #FFFACD
url_color             #0087BD
url_style             single
cursor                #68b1d9

# black
color0   #3B4252
color8   #4C566A

# red
color1   #BF616A
color9   #BF616A

# green
color2   #A3BE8C
color10  #A3BE8C

# yellow
color3   #EBCB8B
color11  #EBCB8B

# blue
color4   #81A1C1
color12  #81A1C1

# magenta
color5   #B48EAD
color13  #B48EAD

# cyan
color6   #88C0D0
color14  #8FBCBB

# white
color7   #E5E9F0
color15  #B48EAD

# Custom scheme dale
# background #202435
# foreground #b5c7d8

# selection_foreground  #000000
# selection_background  #949fce
# url_color             #0087BD
# url_style             single
# cursor #b5c7d8

# color0 #1c1f25
# color3 #D08971

# color1 #C66B6D
# color2 #B28976

# color4 #597497
# color5 #AD7689

# color6 #5F82AC
# color7 #b5c7d8

# color8 #7e8b97
# color9 #C66B6D

# color10 #B28976
# color11 #D08971

# color12 #597497
# color13 #AD7689

# color14 #5F82AC
# color15 #b5c7d8

# Dracula
# background #1e1f28
# foreground #f8f8f2
# cursor #bbbbbb
# selection_background #44475a

# color0 #000000
# color8 #545454
 
# color1 #ff5555
# color9 #ff5454

# color2 #50fa7b
# color10 #50fa7b
 
# color3 #f0fa8b
# color11 #f0fa8b

# color4 #bd92f8
# color12 #bd92f8

# color5 #ff78c5
# color13 #ff78c5

# color6 #8ae9fc
# color14 #8ae9fc

# color7 #bbbbbb
# color15 #ffffff

# selection_foreground #1e1f28

# Mouse & cursor
cursor_blink_interval     0
# cursor_stop_blinking_after 4.0
# one of (block, beam, underline)
cursor_shape     block
mouse_hide_wait 3.0

scrollback_lines 10000
scrollback_pager less +G -R
scrollback_in_new_tab no

# Wheel scroll multiplier (modify the amount scrolled by the mouse wheel). Use negative
# numbers to change scroll direction.
wheel_scroll_multiplier 5.0

# The interval between successive clicks to detect double/triple clicks (in seconds)
click_interval 0.5

#Select for double clicking
select_by_word_characters :@-./_~?&=%+#

#don't care, use bspwm.
focus_follows_mouse yes
remember_window_size   no
enabled_layouts *
initial_window_width   640
initial_window_height  400

# 10 yields ~100 FPS which is more than sufficient for most uses.
repaint_delay    10

# Delay (in milliseconds) before input from the program running in the terminal
# is processed.
input_delay 3

#bell
#visual_bell_duration 0.1
enable_audio_bell yes

# The modifier keys to press when clicking with the mouse on URLs to open the URL
open_url_modifiers ctrl+shift
open_url_with default

# Choose whether to use the system implementation of wcwidth() (used to
# control how many cells a character is rendered in).  If you use the system
# implementation, then kitty and any programs running in it will agree. The
# problem is that system implementations often are based on outdated unicode
# standards and get the width of many characters, such as emoji, wrong. So if
# you are using kitty with programs that have their own up-to-date wcwidth()
# implementation, set this option to no.
use_system_wcwidth yes

# The value of the TERM environment variable to set
term xterm-kitty

#window decorations
window_border_width 0
window_padding_width 0
active_border_color #00ff00
inactive_border_color #cccccc

# Tab-bar colors
active_tab_foreground #2E3440
active_tab_background #88C0D0
inactive_tab_foreground #E5E9F0
inactive_tab_background #3B4252

tab_bar_style separator

tab_powerline_style round
tab_bar_edge top

tab_activity_symbol ' ï˜š'
tab_title_template " {title} "
tab_separator ""

active_tab_font_style   normal
inactive_tab_font_style normal

# Key mappings

# Clipboard
map ctrl+shift+v        paste_from_clipboard
map ctrl+shift+s        paste_from_selection
map ctrl+shift+c        copy_to_clipboard
map shift+insert        paste_from_selection
map ctrl+shift+o        pass_selection_to_program google-chrome

# Scrolling
map ctrl+shift+up        scroll_line_up
map ctrl+shift+down      scroll_line_down
map ctrl+shift+k         scroll_line_up
map ctrl+shift+j         scroll_line_down
map ctrl+shift+page_up   scroll_page_up
map ctrl+shift+page_down scroll_page_down
map ctrl+shift+home      scroll_home
map ctrl+shift+end       scroll_end
map ctrl+shift+h         show_scrollback

# Window management
map ctrl+shift+enter    new_window
map ctrl+shift+w        close_window
map ctrl+shift+]        next_window
map ctrl+shift+[        previous_window
map ctrl+shift+f        move_window_forward
map ctrl+shift+b        move_window_backward
map ctrl+shift+`        move_window_to_top
map ctrl+shift+1        first_window
map ctrl+shift+2        second_window
map ctrl+shift+3        third_window
map ctrl+shift+4        fourth_window
map ctrl+shift+5        fifth_window
map ctrl+shift+6        sixth_window
map ctrl+shift+7        seventh_window
map ctrl+shift+8        eighth_window
map ctrl+shift+9        ninth_window
map ctrl+shift+0        tenth_window
# You can also open a new window running an arbitrary program, for example:
# map ctrl+shift+y      new_window mutt
# You can also pass the current selection to the new program by using the @selection placeholder
# map ctrl+shift+y      new_window less @selection
# Finally, you can even send the contents of the current screen + history buffer as stdin using
# the placeholders @text (which is the plain text) and @ansi (which includes text styling escape codes)
# For example, the following command opens the scrollback buffer in less in a new window.
# map ctrl+shift+y      new_window @ansi less +G -R


# Tab management
map ctrl+shift+right    next_tab
map ctrl+shift+left     previous_tab
map ctrl+shift+t        new_tab
map ctrl+shift+q        close_tab
map ctrl+shift+l        next_layout
map ctrl+shift+.        move_tab_forward
map ctrl+shift+,        move_tab_backward
# Just as with new_window above, you can also pass the name of arbitrary
# commands to run when using new_tab.

# Miscellaneous
map ctrl+shift+equal    increase_font_size
map ctrl+shift+minus    decrease_font_size
map ctrl+shift+backspace restore_font_size
map ctrl+shift+f11      toggle_fullscreen

allow_remote_control yes
disable_ligatures never
background_opacity 0.80
# hide_window_decorations yes
window_padding_width 10
