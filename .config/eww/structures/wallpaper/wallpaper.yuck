(defpoll WALLPAPER :interval "1s" "scripts/wallpaper -c")

(defwindow wallpaper
           :monitor 0
           :geometry (geometry :x "0"
                               :y "0"
                               :width "1920"
                               :height "1080"
                               :anchor "center")
           :stacking "bg"
           :windowtype "normal"
           :wm-ignore true
  (picture))

(defwidget picture []
  (image :path "${WALLPAPER}"
         :width 1980
         :height 1080))

(defwindow change
           :monitor 0
           :geometry (geometry :x "-20"
                               :y "-20"
                               :width "250"
                               :height "70"
                               :anchor "bottom right")
           :stacking "fg"
           :windowtype "normal"
           :wm-ignore true
  (navigator :next "scripts/wallpaper --next-path"
             :previous "scripts/wallpaper --previous-path"
             :apply "scripts/wallpaper --apply-wallpaper"))

(defwidget navigator [next previous apply]
  (box :orientation "h"
       :halign "center"
       :class "nav-box"
       :space-evenly false
    (button :onclick previous
            :class "btn-navi btn-nav-prev"
      (label :text " "
             :class "nav-label nav-label-prev"))
    (button :onclick apply
            :class "btn-nav btn-nav-apply"
      (label :text ""
             :class "nav-label nav-label-apply"))
    (button :onclick next
            :class "btn-nav btn-nav-next"
      (label :text " "
             :class "nav-label nav-label-next"))))



(defwindow backlightwallpaper
           :monitor 0
           :geometry (geometry :x "-20"
                               :y "-95"
                               :width "250"
                               :height "35"
                               :anchor "bottom right")
           :stacking "fg"
           :windowtype "normal"
           :wm-ignore true
  (backlight :label "盛  "
                  :value {BACKLIGHT}
                  :onchange ""))

(defpoll BACKLIGHT :interval "5s" "xbacklight -get")

(defwidget backlight [label value onchange]
  (box :orientation "h"
       :class "backlight"
       :space-evenly false
    (box :class "label-backlight" label)
    (scale :min 0
           :max 101
           :active true
           :value value
           :onchange "xbacklight -set {}")))

(defwindow titlebar
           :monitor 0
           :geometry (geometry :x "40"
                               :y "40"
                               :width "280"
                               :height "40"
                               :anchor "top left")
           :stacking "fg"
           :windowtype "normal"
           :wm-ignore true
  (title))

(defwidget title []
  (label :text "Browse Wallpapers"
         :class "title-label"))

(defpoll HOUR :interval "60s" "date +%I")
(defpoll MIN :interval "5s" "date +%M")
(defpoll AMPM :interval "60s" "date +%p")

(defwindow wallpapertime
           :monitor 0
           :geometry (geometry :x "40"
                               :y "102"
                               :width "280"
                               :height "100"
                               :anchor "top left")
           :stacking "fg"
           :windowtype "normal"
           :wm-ignore true
  (wallpapertimeinfo))

(defwidget wallpapertimeinfo []
  (box :orientation "h"
       :space-evenly false
       :class "wallpaper-time-child"
    (label :text "${HOUR}"
           :class "wallpaper-time-label wallpaper-time-label-hr")
    (label :text ":"
           :class "wallpaper-time-label wallpaper-time-label-sep")
    (label :text "${MIN}"
           :class "wallpaper-time-label wallpaper-time-label-min")
    (label :text " ${AMPM}"
           :halign "end"
           :class "wallpaper-time-label wallpaper-time-label-ampm")))
